import { useEffect, useState } from 'react';

import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import styles from '../styles/Home.module.css';

import axios from 'axios';

import { setAccessToken } from '../libs/accessToken';

const Home: NextPage = () => {
	const [email, setEmail] = useState('');
	const [password, setPassword] = useState('');

	const [errors, setErrors] = useState([{ msg: '' }]);
	const [user, setUser] = useState({ nom: '', prenom: '' });

	useEffect(() => {
		axios
			.post('http://127.0.0.1:8000/refresh_token', undefined, { withCredentials: true })
			.then((r) => {
				console.log(r.data.data);
				setAccessToken(r.data.data.accessToken);
				setUser(r.data.data.user);
			})
			.catch((err) => console.log(err));
	}, []);

	const onLogin = (e: any): void => {
		e.preventDefault();
		setErrors([{ msg: '' }]);

		axios
			.post('http://127.0.0.1:8000/api/auth/signin', { email, password }, { withCredentials: true })
			.then((res) => {
				if (res.data.data === null) {
					setErrors(res.data.error);
				} else {
					setUser(res.data.data.user);
					setAccessToken(res.data.data.accessToken);
				}
			})
			.catch((err) => {
				console.log(err);
			});
	};

	const setM = (e: any): void => {
		setEmail(e.target.value);
	};

	const setP = (e: any): void => {
		setPassword(e.target.value);
	};

	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<main className={styles.main}>
				<h1 className={styles.title}>
					Welcome <Link href='/'>Home!</Link>
				</h1>

				<p className={styles.description}>
					Testing some secure <code className={styles.code}>jsonwebtoken</code> authentification method using cookies
					and variables
				</p>

				{errors[0].msg.length > 0 &&
					errors.map((e, i) => (
						<p key={i} className={styles.error}>
							{e.msg}
						</p>
					))}

				{user.nom.length < 1 ? (
					<form className={styles.form}>
						<label htmlFor='email'>Email</label>
						<input name='email' id='email' placeholder='email' type='email' onChange={setM} />
						<label htmlFor='password'>Password</label>
						<input name='password' id='password' placeholder='password' type='password' onChange={setP} />
						<button onClick={onLogin} type='submit' disabled={!(email.length > 0 && password.length > 0)}>
							Login
						</button>
					</form>
				) : (
					<div className={styles.grid}>
						<Link href='/profile'>
							<a className={styles.card}>
								<h2>Profile &rarr;</h2>
								<p>Check out your profile.</p>
							</a>
						</Link>
					</div>
				)}
			</main>
		</div>
	);
};

export default Home;
